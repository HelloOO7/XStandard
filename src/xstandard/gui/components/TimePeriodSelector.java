package xstandard.gui.components;

import xstandard.gui.components.listeners.ToggleableActionListener;
import java.awt.event.ActionEvent;
import javax.swing.event.ChangeListener;

public class TimePeriodSelector extends javax.swing.JPanel {

	private static final int BOXIDX_MINUTES = 0;
	private static final int BOXIDX_HOURS = 1;
	private static final int BOXIDX_DAYS = 2;
	private static final int BOXIDX_WEEKS = 3;
	
	private int units = -1;
	
	private ToggleableActionListener timeUnitListener = new ToggleableActionListener() {
		@Override
		public void actionPerformedImpl(ActionEvent e) {
			float val = 0;
			
			int curVal = getMinutes(units, ((Number)value.getValue()).intValue());
			
			switch (timeUnit.getSelectedIndex()) {
				case BOXIDX_DAYS:
					val = curVal / (24f * 60f);
					break;
				case BOXIDX_WEEKS:
					val = curVal / (168f * 60f);
					break;
				case BOXIDX_HOURS:
					val = curVal / (60f);
					break;
				case BOXIDX_MINUTES:
					val = curVal;
					break;
			}
			
			int iVal = Math.round(val);
			
			if (iVal == 0) {
				iVal = 1;
			}
			value.setValue(iVal);
			
			updateNowUnits();
		}
	};

	public TimePeriodSelector() {
		initComponents();
		
		units = timeUnit.getSelectedIndex();
		
		timeUnit.addActionListener(timeUnitListener);
	}
	
	private void updateNowUnits() {
		units = timeUnit.getSelectedIndex();
	}

	public long getSelectedMillisValue() {
		return getSelectedMinuteValue() * 60 * 1000;
	}
	
	private int getMinutes(int unit, int val) {
		switch (unit) {
			case BOXIDX_MINUTES:
				return val;
			case BOXIDX_HOURS:
				return val * 60;
			case BOXIDX_DAYS:
				return val * 24 * 60;
			case BOXIDX_WEEKS:
				return val * 168 * 60;
		}
		return 0;
	}

	public int getSelectedMinuteValue() {
		int val = ((Number) value.getValue()).intValue();
		return getMinutes(timeUnit.getSelectedIndex(), val);
	}

	public int getSelectedHourValue() {
		int val = ((Number) value.getValue()).intValue();
		switch (timeUnit.getSelectedIndex()) {
			case BOXIDX_HOURS:
				return val;
			case BOXIDX_DAYS:
				return val * 24;
			case BOXIDX_WEEKS:
				return val * 168;
		}
		return 0;
	}

	public void setHourValue(int hours) {
		setMillisValue(hours * 60 * 60 * 1000);
	}

	public void setMillisValue(long millis) {
		int minutes = Math.round(millis / (60f * 1000f));
		int hours = Math.round(minutes / 60f);
		int days = Math.round(hours / 24f);

		timeUnitListener.setAllowEvents(false);
		if (minutes != 0 && minutes % (168 * 60) == 0) {
			int weeks = Math.round(days / 7f);
			timeUnit.setSelectedIndex(BOXIDX_WEEKS);
			value.setValue(weeks);
		} else if (minutes != 0 && minutes % (24 * 60) == 0) {
			timeUnit.setSelectedIndex(BOXIDX_DAYS);
			value.setValue(days);
		} else if (minutes != 0 && minutes % 60 == 0) {
			timeUnit.setSelectedIndex(BOXIDX_HOURS);
			value.setValue(hours);
		} else {
			timeUnit.setSelectedIndex(BOXIDX_MINUTES);
			value.setValue(minutes);
		}
		timeUnitListener.setAllowEvents(true);
		updateNowUnits();
	}

	public void addChangeListener(ChangeListener cl) {
		value.addChangeListener(cl);
	}

	@Override
	public void setEnabled(boolean value) {
		super.setEnabled(value);
		timeUnit.setEnabled(value);
		this.value.setEnabled(value);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        value = new javax.swing.JSpinner();
        timeUnit = new javax.swing.JComboBox<>();

        value.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        timeUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minutes", "Hours", "Days", "Weeks" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(value)
            .addComponent(timeUnit)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> timeUnit;
    private javax.swing.JSpinner value;
    // End of variables declaration//GEN-END:variables
}
