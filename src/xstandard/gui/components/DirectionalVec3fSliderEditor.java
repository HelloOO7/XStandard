package xstandard.gui.components;

import xstandard.math.vec.Vec3f;
import xstandard.util.ArraysEx;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class DirectionalVec3fSliderEditor extends javax.swing.JPanel {

	private Vec3f vec = new Vec3f();

	private boolean allowChanges = false;

	private final JSlider[] SLIDERS = new JSlider[2];

	private List<VectorEditorListener> listeners = new ArrayList<>();

	public DirectionalVec3fSliderEditor() {
		initComponents();

		SLIDERS[0] = pitch;
		SLIDERS[1] = yaw;

		ChangeListener cl = new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				if (allowChanges) {
					renormalize();
					callListeners();
				}
			}
		};

		pitch.addChangeListener(cl);
		yaw.addChangeListener(cl);
	}

	private void callListeners() {
		for (VectorEditorListener l : listeners) {
			l.onChanged();
		}
	}

	public void addListener(VectorEditorListener l) {
		ArraysEx.addIfNotNullOrContains(listeners, l);
	}

	private void renormalize() {
		float xzVal = getFpFromSlider(yaw);
		float yVal = getFpFromSlider(pitch);
		float cosPitch = (float) Math.cos(yVal);

		vec.x = cosPitch * (float) Math.sin(xzVal);
		vec.y = -(float) Math.sin(yVal);
		vec.z = cosPitch * (float) Math.cos(xzVal);
	}

	public void loadVec(Vec3f vec) {
		if (vec == null) {
			this.vec = Vec3f.ZERO();
		} else {
			this.vec = vec;
		}
		refresh();
	}

	public void refresh() {
		allowChanges = false;
		setFpToSlider(calcPitch(vec), pitch);
		setFpToSlider(calcYaw(vec), yaw);
		allowChanges = true;
	}
	
	public Vec3f getVector() {
		return vec;
	}

	public static float calcPitch(Vec3f vector) {
		return (float) Math.asin(-vector.y);
	}

	public static float calcYaw(Vec3f vector) {
		return (float) Math.atan2(vector.x, vector.z);
	}

	public float getFpFromSlider(JSlider slider) {
		return (slider.getValue()) / 100f;
	}

	public void setFpToSlider(float value, JSlider slider) {
		slider.setValue((int) (value * 100f));
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        pitch = new javax.swing.JSlider();
        yaw = new javax.swing.JSlider();

        xLabel.setForeground(new java.awt.Color(255, 0, 0));
        xLabel.setText("Pitch");

        yLabel.setForeground(new java.awt.Color(0, 153, 0));
        yLabel.setText("Yaw");

        pitch.setMajorTickSpacing(157);
        pitch.setMaximum(157);
        pitch.setMinimum(-157);
        pitch.setPaintTicks(true);
        pitch.setValue(0);

        yaw.setMajorTickSpacing(157);
        yaw.setMaximum(314);
        yaw.setMinimum(-314);
        yaw.setPaintTicks(true);
        yaw.setValue(0);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pitch, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(yaw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pitch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(yaw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider pitch;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    private javax.swing.JSlider yaw;
    // End of variables declaration//GEN-END:variables
}
